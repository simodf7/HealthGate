version: "3.9"

services:
  api-gateway:
    build: microservices/api-gateway
    container_name: api-gateway
    ports:
      - "8010:8010"
    env_file:
      - microservices/api-gateway/.env
    depends_on:
      - auth
      - auth-db
      - chroma
    networks:
      - microservices-network

  auth:
    build: microservices/auth
    container_name: auth
    ports:
      - "8001:8001"
    env_file:
      - microservices/auth/.env
    depends_on:
      - auth-db
    networks:
      - microservices-network

  auth-db:
    image: postgres:15
    container_name: auth-db
    env_file:
      - microservices/auth/.env
    ports:
      - "5432:5432"
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    networks:
      - microservices-network

  ingestion:
    build: microservices/ingestion
    container_name: ingestion
    ports:
      - "8002:8002"
    env_file:
      - microservices/ingestion/.env
    networks:
      - microservices-network



  chroma:
    image: ghcr.io/chroma-core/chroma:latest
    container_name: chroma
    ports:
      - "8000:8000"
    volumes:
      - ./chroma:/data 
    environment:
      - ALLOW_RESET=true
    networks:
      - microservices-network
    restart: unless-stopped


  
  decision:
    build: microservices/decision-engine
    container_name: decision
    ports:
      - "8003:8003"
    env_file:
      - microservices/decision-engine/.env
    depends_on:
      - chroma
    volumes:
      - ./chroma:/chroma_data
    networks:
      - microservices-network


  report-management:
    build: microservices/report-management
    container_name: report-management
    ports:
      - "8004:8004"
    env_file:
      - microservices/report-management/.env
    networks:
      - microservices-network


  aggregator:
    build: microservices/aggregator
    container_name: aggregator
    ports:
      - "8005:8005"
    depends_on:
      - auth
      - report-management
    env_file:
      - microservices/aggregator/.env
    networks:
      - microservices-network

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "8501:8501"
    volumes:
      - ./frontend:/app
    depends_on:
      - api-gateway
    networks:
      - microservices-network

   
volumes:
  auth-db-data:

networks:
  microservices-network:
    driver: bridge
